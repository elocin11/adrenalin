{"version":3,"sources":["assets/images/adrenalin.svg","assets/images sync /^/.*$","assets/images/1001.jpg","assets/images/1001_thumb.jpg","assets/images/1002.jpg","assets/images/1002_thumb.jpg","assets/images/1003.jpg","assets/images/1003_thumb.jpg","assets/images/1004.jpg","assets/images/1004_thumb.jpg","components/Header/index.js","components/Footer/index.js","components/Article/index.js","pages/ListingPage/index.js","pages/SingleViewPage/index.js","routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","Header","className","Container","to","src","logo","alt","Footer","Article","React","memo","title_long","tag","thumb","slug","data-testid","require","propTypes","PropTypes","string","ListingPage","Fragment","Row","data","Col","key","xl","lg","SingleViewPage","history","useParams","useState","article","setArticle","getMatchArticle","useCallback","match","find","item","push","useEffect","image","title","questions","question","index","Routes","exact","path","component","App","createBrowserHistory","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.33e774d2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/adrenalin.01cc78b5.svg\";","var map = {\n\t\"./1001.jpg\": 33,\n\t\"./1001_thumb.jpg\": 34,\n\t\"./1002.jpg\": 35,\n\t\"./1002_thumb.jpg\": 36,\n\t\"./1003.jpg\": 37,\n\t\"./1003_thumb.jpg\": 38,\n\t\"./1004.jpg\": 39,\n\t\"./1004_thumb.jpg\": 40,\n\t\"./adrenalin.svg\": 10\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 19;","module.exports = __webpack_public_path__ + \"static/media/1001.1539fa57.jpg\";","module.exports = __webpack_public_path__ + \"static/media/1001_thumb.1534c150.jpg\";","module.exports = __webpack_public_path__ + \"static/media/1002.c7487b14.jpg\";","module.exports = __webpack_public_path__ + \"static/media/1002_thumb.65ce0840.jpg\";","module.exports = __webpack_public_path__ + \"static/media/1003.40c062a0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/1003_thumb.ead585af.jpg\";","module.exports = __webpack_public_path__ + \"static/media/1004.806eda6e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/1004_thumb.2f12a978.jpg\";","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Container } from \"reactstrap\";\r\nimport logo from \"./../../assets/images/adrenalin.svg\";\r\n\r\nconst Header = () => (\r\n  <header className=\"header\">\r\n    <Container>\r\n      <Link to=\"/\">\r\n        <img src={logo} className=\"logo\" alt=\"logo\" />\r\n      </Link>\r\n      <nav className=\"nav\">\r\n        <ul>\r\n          <li>\r\n            <Link to=\"/\">Culture</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/\">Work</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/\">Clients</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/\">Services</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/\">Careers</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/\">Contact</Link>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </Container>\r\n  </header>\r\n);\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Container } from \"reactstrap\";\r\nimport logo from \"./../../assets/images/adrenalin.svg\";\r\n\r\nconst Footer = () => (\r\n  <footer className=\"footer\">\r\n    <Container>\r\n      <Link to=\"/\">\r\n        <img src={logo} className=\"logo\" alt=\"logo\" />\r\n      </Link>\r\n      <nav className=\"nav\">\r\n        <ul>\r\n          <li>\r\n            <Link to=\"/\">Privacy</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/\">Sitemap</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/\">Facebook</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/\">Linkedin</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/\">Instagram</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/\">Twitter</Link>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </Container>\r\n  </footer>\r\n);\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Article = React.memo(({ title_long, tag, thumb, slug }) => (\r\n  <article className=\"article\" data-testid=\"article\">\r\n    <img\r\n      src={require(\"./../../assets/images/\" + thumb)}\r\n      alt=\"title\"\r\n      className=\"article-thumb\"\r\n    />\r\n    <span className=\"article-tag\">{tag}</span>\r\n    <h4 className=\"article-title\">{title_long}</h4>\r\n    <Link to={`/${slug}`} className=\"article-link\">\r\n      View case study\r\n    </Link>\r\n  </article>\r\n));\r\n\r\nArticle.propTypes = {\r\n  title_long: PropTypes.string,\r\n  tag: PropTypes.string,\r\n  thumb: PropTypes.string,\r\n  slug: PropTypes.string,\r\n};\r\n\r\nexport default Article;\r\n","import React from \"react\";\r\nimport Header from \"../../components/Header\";\r\nimport Footer from \"../../components/Footer\";\r\nimport Article from \"../../components/Article\";\r\nimport data from \"./../../fixtures/data.json\";\r\nimport { Container, Row, Col } from \"reactstrap\";\r\n\r\nconst ListingPage = React.memo(() => (\r\n  <React.Fragment>\r\n    <Header />\r\n    <Container>\r\n      <Row>\r\n        {data.map(({ id, title_long, tag, thumb, slug }) => (\r\n          <Col key={id} xl={6} lg={6} className=\"mb-5\">\r\n            <Article\r\n              title_long={title_long}\r\n              tag={tag}\r\n              thumb={thumb}\r\n              slug={slug}\r\n            />\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </Container>\r\n    <Footer />\r\n  </React.Fragment>\r\n));\r\n\r\nexport default ListingPage;\r\n","import React, { useEffect, useState, useCallback } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Header from \"../../components/Header\";\r\nimport Footer from \"../../components/Footer\";\r\nimport { Container, Row, Col } from \"reactstrap\";\r\nimport data from \"./../../fixtures/data.json\";\r\n\r\nconst SingleViewPage = React.memo(({ history }) => {\r\n  const { slug } = useParams();\r\n  const [article, setArticle] = useState(null);\r\n\r\n  const getMatchArticle = useCallback(\r\n    (slug) => {\r\n      let match = data.find((item) => item.slug === slug);\r\n      if (match) {\r\n        setArticle(match);\r\n      } else {\r\n        history.push(\"/\");\r\n      }\r\n    },\r\n    [setArticle, history]\r\n  );\r\n\r\n  useEffect(() => {\r\n    getMatchArticle(slug);\r\n  }, [getMatchArticle, slug]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Header />\r\n      <Container className=\"single-view-page\">\r\n        {article && (\r\n          <Row>\r\n            <Col xl=\"6\">\r\n              <img\r\n                src={require(\"./../../assets/images/\" + article.image)}\r\n                alt={article.image}\r\n                className=\"article-image\"\r\n              />\r\n              <span className=\"article-tag\">{article.tag}</span>\r\n            </Col>\r\n            <Col xl=\"6 article-right\">\r\n              <h1 className=\"article-title\">{article.title}</h1>\r\n              <ul className=\"questions\">\r\n                {article.questions.map((question, index) => (\r\n                  <li key={index}>\r\n                    <h5 className=\"question-number\">Question {index + 1}</h5>\r\n                    <p className=\"question-body\">{question}</p>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </Col>\r\n          </Row>\r\n        )}\r\n      </Container>\r\n      <Footer />\r\n    </React.Fragment>\r\n  );\r\n});\r\n\r\nexport default SingleViewPage;\r\n","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\n\r\nimport ListingPage from \"./pages/ListingPage\";\r\nimport SingleViewPage from \"./pages/SingleViewPage\";\r\n\r\nconst Routes = React.memo(() => (\r\n  <Switch>\r\n    <Route exact path=\"/\" component={ListingPage} />\r\n    <Route path=\"/:slug\" component={SingleViewPage} />\r\n  </Switch>\r\n));\r\n\r\nexport default Routes;\r\n","import React from \"react\";\r\nimport { Router } from \"react-router-dom\";\r\nimport Routes from \"./routes.js\";\r\nimport { createBrowserHistory } from \"history\";\r\nimport \"./assets/styles/app.scss\";\r\n\r\nconst App = () => (\r\n  <Router history={createBrowserHistory()}>\r\n    <Routes />\r\n  </Router>\r\n);\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}